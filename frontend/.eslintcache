[{"/home/vrito/dev-stuff/react-notes-app/frontend/src/components/modal/modalContent.tsx":"1"},{"size":5210,"mtime":1609741071813,"results":"2","hashOfConfig":"3"},{"filePath":"4","messages":"5","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"6"},"pzaj2r","/home/vrito/dev-stuff/react-notes-app/frontend/src/components/modal/modalContent.tsx",["7","8","9","10"],"import React, { FormEvent, useState } from 'react';\nimport { MdAdd, MdClear } from 'react-icons/md';\n\nimport Modal from 'react-modal'\nimport api from '../../services/api';\nimport './appStyle.css';\n\n// import { Container } from './styles';\n\n\nexport default function ModalContent() {\n\n    const [ title, setTitle ] = useState('')\n    const [ body, setBody ] = useState('')\n\n    \n\n\n\n    async function handleSubmit(event: FormEvent){\n\n      event.preventDefault()\n\n      const data = new FormData\n\n      data.append('title', title)\n      data.append('body', body)\n\n      console.log({title, body})\n\n\n      await api.post('/notes', data)\n      alert('nota cadastrada!')\n    }\n\n    \n\n\n    const customStyles = {\n        overlay: {\n          backgroundColor: 'rgba(0, 0, 0, 0.5)'\n        },\n        content : {\n          top: '50%',\n          left: '50%',\n          right : 'auto',\n          bottom: 'auto',\n          marginRight: '-50%',\n          transform: 'translate(-50%, -50%)',\n          width: '600px',\n          height: '700px',\n          boxShadow: '0px 0px 0px 1980px rgba(0, 0, 0, 0.5)',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'space-between',\n          backgroundColor:'rgb(17,5,78)',\n          background: 'linear-gradient(333deg, rgba(17,5,78,1) 0%, rgba(50,25,142,1) 25%, rgba(91,51,224,1) 100%)',\n          \n        }\n      };\n\n    const [modalIsOpen,setIsOpen] = useState(false);\n    \n      function openModal() {\n        setIsOpen(true);\n      }\n    \n      function afterOpenModal() {\n        // subtitle.style.color = '#f00';\n      }\n    \n      \n        function closeModal(){\n          setIsOpen(false);\n        }\n\n    return(\n        <>\n        <button type=\"submit\" value=\"criar\" onClick={openModal}>\n              <MdAdd fill={\"white\"} size={32}/>\n        </button>\n        <Modal \n              isOpen={modalIsOpen}\n              onAfterOpen={afterOpenModal}\n              onRequestClose={closeModal}\n              style={customStyles}\n              contentLabel=\"Example Modal\"\n        >\n            \n            <div \n             className=\"content-container\"\n             style={{\n                 width: '100%',\n                 height: '100%',\n                 background: 'none',\n                 display: 'flex',\n                 flexDirection: 'column',\n                 justifyContent: 'space-between',\n                 alignItems: 'center',\n              }}>\n              \n              <MdClear\n                fill={'white'}\n                size={23}\n                onClick={closeModal}\n                style={{position: 'absolute', top: '2%', left: '95%'}}\n              />\n              \n              <div\n                className=\"title\"\n                style={{\n                  background: 'none',\n                  width: '100%',\n                  height: '100px',\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'flex-start',\n                }}>\n                <h1\n                  style={{\n                    color: 'white',\n                    fontWeight: 'normal',\n                    fontFamily: 'Roboto, sans-serif'\n                }}>\n                    Adicionar nota\n                </h1>\n                \n              </div>\n\n              <div\n                className=\"body-container\"\n                style={{\n                  background: 'none',\n                  width: '100%',\n                  height: '100%',\n                  display: 'flex',\n                  flexDirection: 'column',\n                }}>\n                  <form style={{\n                    height: '100%',\n                    display: 'flex',\n                    flexDirection: 'column'\n\n                  }}>\n                    <input\n                    \n                    type='text'\n                    placeholder='Titulo'\n                    style={{ \n                        fontSize: '24pt',\n                        fontFamily: 'Roboto, sans-serif',\n                        borderBottom: 'solid 2px white',\n                        color: 'white',\n                        padding: '5px 20px',\n                        textAlign: 'center',\n                      }}/>\n                    <textarea \n                    placeholder='Texto aqui...'\n                    style={{\n                      resize: 'none',\n                      width: '100%',\n                      fontSize: '16pt',\n                      fontFamily: 'Roboto, sans-serif',\n                      color: 'white',\n                      padding: '10px 20px',\n                      margin: '5px auto',\n                      backgroundColor: 'hsla(0, 0%, 100%, 0.25)',\n                      borderRadius: '4px',\n                      height: '100%'\n                    }}/>\n                    \n                  </form>\n                  <button \n                  style={{\n                    padding: '10px',\n                    border: 'white solid 1px',\n                    borderRadius: '4px',\n                    color: 'white',\n                    fontSize: '16px'\n                  }}>Enviar</button>\n              </div>\n\n             </div>\n         </Modal> \n         </>\n    )\n}",{"ruleId":"11","severity":1,"message":"12","line":13,"column":20,"nodeType":"13","messageId":"14","endLine":13,"endColumn":28},{"ruleId":"11","severity":1,"message":"15","line":14,"column":19,"nodeType":"13","messageId":"14","endLine":14,"endColumn":26},{"ruleId":"11","severity":1,"message":"16","line":20,"column":20,"nodeType":"13","messageId":"14","endLine":20,"endColumn":32},{"ruleId":"17","severity":1,"message":"18","line":24,"column":20,"nodeType":"19","messageId":"20","endLine":24,"endColumn":32,"fix":"21"},"@typescript-eslint/no-unused-vars","'setTitle' is assigned a value but never used.","Identifier","unusedVar","'setBody' is assigned a value but never used.","'handleSubmit' is defined but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"22","text":"23"},[493,493],"()"]